#!/bin/bash


## generate source
source /setup/setupenvi
cat /setup/setupenvi
echo 'export is configured'


## create hostname
echo $HOSTNAME > /etc/hostname
echo 'hostname is configured'



## create zoneinfo
ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc
echo 'zone info is configured'



## config locales
printf "$LOCALES1\n$LOCALES2" >> /etc/locale.gen
locale-gen && locale > /etc/locale.conf
sed -i '1s/.*/LANG='$LOCALESC'/' /etc/locale.conf
echo 'locales is configured'



## editor environment
echo 'EDITOR="/usr/bin/nvim"' >> /etc/environment
echo 'environtment is configured'



#admin user
if [[  -d /home/lektor ]];then
    useradd -d /home/lektor lektor
else
    useradd -m lektor
fi
chown -R lektor:lektor /home/lektor
usermod -a -G wheel lektor
echo "lektor:1511" | chpasswd &&
echo 'lektor ALL=(ALL:ALL) ALL' > /etc/sudoers.d/00_lektor
echo 'lektor user created'



## lock root  user
passwd -l root
echo "1511" | passwd --stdin &&
sleep 5



## networking
#ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
#sleep 5

#if [[ -z $NETSIPV4 ]]&&[[ -z $NETSGATE ]];then
#    sed -i '8s/.*/#DHPC=yes/' /etc/systemd/network/30-bridge.network
#    sed -i '9s/.*/Address='$NETSIPV4'/' /etc/systemd/network/30-bridge.network
#    sed -i '10s/.*/Address='$NETSGATE'/' /etc/systemd/network/30-bridge.network
#    sed -i '11s/.*/Address='$NETSDNSS'/' /etc/systemd/network/30-bridge.network
#fi

systemctl enable systemd-networkd.socket
systemctl enable systemd-resolved
sleep 5



## kernel config   
echo "rd.luks.uuid=$(blkid -s UUID -o value $DISKROOT) root=/dev/proc/root" > /etc/cmdline.d/01-boot.conf
echo "data UUID=$(blkid -s UUID -o value $DISKDATA) none" >> /etc/crypttab
echo "intel_iommu=on i915.fastboot=1" >> /etc/cmdline.d/02-mods.conf
echo 'kernel is configured'
sleep 5


## initram config 
mv /boot/intel-ucode.img /boot/vmlinuz-linux-hardened /boot/kernel
rm /boot/initramfs-*
bootctl --path=/boot/ install
touch /etc/vconsole.conf
echo 'boot is configured'
sleep 5


# aide file integrity
#echo 'lektor ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/00_lektor
#yes | gpg --recv-keys 2BBBD30FAAB29B3253BCFBA6F6947DAB68E7B931
#sudo -H -u lektor bash -c 'git clone https://aur.archlinux.org/aide.git /tmp/aide'
#sudo -H -u lektor bash -c 'makepkg -sric --dir /tmp/aide --noconfirm'
#aide --init
#echo 'lektor ALL=(ALL:ALL) ALL' > /etc/sudoers.d/00_lektor
#sleep 5


## systemd journal remote config


## firewalld config
systemctl enable firewalld


## tangserver config
systemctl enable tangd.socket


## apparmor config
systemctl enable apparmor.service
sleep 5


## netboot config
curl --output recovery.efi https://boot.netboot.xyz/ipxe/netboot.xyz.efi
mv -f recovery.efi /boot/efi/rescue/
sleep 5


## vhost config
systemctl enable libvirtd.socket
usermod -aG libvirt lektor
sleep 5


## reflector config
cp /etc/pacman.d/mirrorlist /etc/pacman.d/backupmirror 
sleep 5


## tunned config
systemctl enable tuned-ppd
sleep 5


## irg balanace config
systemctl enable irqbalance.service
sleep 5


## generate efi
mkinitcpio -P